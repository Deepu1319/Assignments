interface librarian
{
   void issuedBookDetails();
   void calculateFine();
}
interface member
{
   void issuedBooks();
   void finePayment();
}
abstract class Admin
{
   String name;
   int id;
   abstract void dailyOperations();
   void coordination()
   {
       System.out.println("provides coordination");
   }
   public Admin(int id, String name)
   {
       this.id=id;
       this.name=name;
   }
}
class  libraryManagement extends Admin implements librarian,member
{
   @Override
   public void issuedBookDetails()
   {    }
   @Override
   public void calculateFine()
   {    }
   @Override
   public void issuedBooks()
   {    }
   @Override
   public void finePayment()
   {    }
   public void dailyOperations()
   {
 System.out.println("Admin perform various operation");
   }
   libraryManagement(int i,String n)
   {
       super(i,n);
   }
   public static  void main(String[]args){
       libraryManagement l=new libraryManagement(1,"ram");
       System.out.println(l.name+" "+l.id);
       libraryManagement l1=new libraryManagement(2,"mohan");
       System.out.println(l1.name+" "+l1.id);
       l.dailyOperations();
   }
}

